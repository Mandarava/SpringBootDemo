package com.ztc.mapper.mybatis;

import com.ztc.entity.mybatis.Coffee;
import com.ztc.entity.mybatis.CoffeeExample;

import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.ResultMap;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectKey;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.session.RowBounds;

import java.util.List;

public interface CoffeeMapper {
    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    long countByExample(CoffeeExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    int deleteByExample(CoffeeExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    @Delete({
            "delete from t_coffee",
            "where id = #{id,jdbcType=BIGINT}"
    })
    int deleteByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    @Insert({
            "insert into t_coffee (name, price, ",
            "create_time, update_time)",
            "values (#{name,jdbcType=VARCHAR}, #{price,jdbcType=BIGINT,typeHandler=com.ztc.handler.MoneyTypeHandler}, ",
            "#{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})"
    })
    @SelectKey(statement = "CALL IDENTITY()", keyProperty = "id", before = false, resultType = Long.class)
    int insert(Coffee record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    int insertSelective(Coffee record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    List<Coffee> selectByExampleWithRowbounds(CoffeeExample example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    List<Coffee> selectByExample(CoffeeExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    @Select({
            "select",
            "id, name, price, create_time, update_time",
            "from t_coffee",
            "where id = #{id,jdbcType=BIGINT}"
    })
    @ResultMap("com.ztc.mapper.mybatis.CoffeeMapper.BaseResultMap")
    Coffee selectByPrimaryKey(Long id);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    int updateByExampleSelective(@Param("record") Coffee record, @Param("example") CoffeeExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    int updateByExample(@Param("record") Coffee record, @Param("example") CoffeeExample example);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    int updateByPrimaryKeySelective(Coffee record);

    /**
     * This method was generated by MyBatis Generator. This method corresponds to the database table
     * t_coffee
     *
     * @mbg.generated
     */
    @Update({
            "update t_coffee",
            "set name = #{name,jdbcType=VARCHAR},",
            "price = #{price,jdbcType=BIGINT,typeHandler=com.ztc.handler.MoneyTypeHandler},",
            "create_time = #{createTime,jdbcType=TIMESTAMP},",
            "update_time = #{updateTime,jdbcType=TIMESTAMP}",
            "where id = #{id,jdbcType=BIGINT}"
    })
    int updateByPrimaryKey(Coffee record);
}